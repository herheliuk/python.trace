********************** call **********************

calling test_script.py

********************** line **********************

{
    "filename": "test_script.py",
    "line {3}": "x = 5"
}

{
    "new globals": {
        "x": 5
    }
}

********************** line **********************

{
    "filename": "test_script.py",
    "line {4}": "y = 10"
}

{
    "new globals": {
        "y": 10
    }
}

********************** line **********************

{
    "filename": "test_script.py",
    "line {6}": "def adD(a, b): #comm"
}

{
    "new globals": {
        "adD": "<function>"
    }
}

********************** line **********************

{
    "filename": "test_script.py",
    "line {10}": "z = adD(x, y)"
}

********************** call **********************

calling adD

{
    "new globals": {
        "x": 5,
        "y": 10,
        "adD": "<function>"
    },
    "new locals": {
        "a": 5,
        "b": 10
    }
}

********************** line **********************

{
    "filename": "test_script.py",
    "function": "adD",
    "line {7}": "tqeww = 1"
}

{
    "new locals": {
        "tqeww": 1
    }
}

********************** line **********************

{
    "filename": "test_script.py",
    "function": "adD",
    "line {8}": "return a + b"
}

********************* return *********************

adD returned 15

{
    "new globals": {
        "z": 15
    }
}

********************** line **********************

{
    "filename": "test_script.py",
    "line {11}": "f\"z = {z}\" #comm"
}

********************** line **********************

{
    "filename": "test_script.py",
    "line {13}": "for i in range(1):"
}

{
    "new globals": {
        "i": 0
    }
}

********************** line **********************

{
    "filename": "test_script.py",
    "line {14}": "z += i"
}

********************** line **********************

{
    "filename": "test_script.py",
    "line {13}": "for i in range(1):"
}

********************** line **********************

{
    "filename": "test_script.py",
    "line {16}": "print(z)"
}

15
********************* return *********************

test_script.py returned None

